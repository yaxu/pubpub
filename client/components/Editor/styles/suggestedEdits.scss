@use 'sass:math';

$addition: forestgreen;
$modification: gold;
$removal: red;
// These are equivalent to rgba($color, 0.2) but without the alpha so that the icon backgrounds will
// "merge" seamlessly with the suggestion span backgrounds
$addition-light: #d8e9d8;
$modification-light: #fff8d9;
$removal-light: #ffd7d7;

@mixin block-border($kind, $color, $border-total-width: 8px, $border-visible-fraction: 0.2) {
	$width-var: var(--suggestion-#{$kind}-width);
	--suggestion-#{$kind}-width: #{$border-total-width};
	border-width: 0 0 0 $width-var;
	border-style: solid;
	border-image: linear-gradient(
			to right,
			$color 0,
			$color 100% * $border-visible-fraction,
			transparent 100% * $border-visible-fraction,
			transparent 100%
		)
		1 100%;
	transform: translateX(calc(-1 * $width-var));

	* {
		--suggestion-#{$kind}-width: 0px;
	}
}

@mixin corner-triangle($size, $color) {
	position: relative;
	&:hover::before,
	.is-selected-range &::before,
	&.is-selected-range::before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		width: 0;
		height: 0;
		border-style: solid;
		border-width: $size $size 0 0;
		border-color: $color transparent transparent transparent;
	}
}

@mixin strikethrough() {
	text-decoration-thickness: 2px;
	text-decoration-color: $removal;
	-webkit-text-decoration-color: $removal;
	text-decoration-line: line-through;
	-webkit-text-decoration-line: line-through;
}

$iconSize: 0.75em;

@mixin highlight-range($color) {
	background-color: rgba($color, 0.2);
}

@mixin corner-icon($character, $color, $color-light) {
	position: relative;
	&:hover::before,
	.is-selected-range &::before,
	&.is-selected-range::before {
		content: $character;
		position: absolute;
		background-color: $color-light;
		color: $color;
		width: 1.1 * $iconSize;
		height: 1.1 * $iconSize;
		border-radius: 50%;
		font-size: $iconSize;
		line-height: 0.9 * $iconSize;
		text-align: center;
		left: -0.9 * $iconSize;
		top: -0.5 * $iconSize;
	}
}

span[data-suggestion-mark='true'][data-suggestion-kind='addition'] {
	padding: 0 0.3 * $iconSize;
	margin: 0 1px;
	@include highlight-range($addition);
	@include corner-icon('+', $addition, $addition-light);
}

span[data-suggestion-mark='true'][data-suggestion-kind='removal'] {
	&::before {
		font-weight: 900;
	}
	@include strikethrough();
	padding: 0 0.3 * $iconSize;
	margin: 0 1px;
	@include highlight-range($removal);
	@include corner-icon('–', $removal, $removal-light);
}

span[data-suggestion-mark='true'][data-suggestion-kind='modification'] {
	background-color: rgba($modification, 0.2);
	@include corner-triangle(10px, $modification);
}

li[data-suggestion-kind='addition']::before {
	// @include block-border('addition', rgba($addition, 0.5));
	// @include corner-icon('+', $addition, $addition-light);
	@include highlight-range($addition);
}

li[data-suggestion-kind='removal']::before {
	// @include block-border('removal', rgba($removal, 0.5));
	// @include corner-icon('–', $removal, $removal-light);
	@include highlight-range($removal);
	@include strikethrough();
}

> *[data-suggestion-kind='addition'] {
	@include block-border('addition', rgba($addition, 0.5));
	@include corner-icon('+', $addition, $addition-light);
}

> *[data-suggestion-kind='removal'] {
	@include block-border('removal', rgba($removal, 0.5));
	@include corner-icon('–', $removal, $removal-light);
}

> *[data-suggestion-kind='modification'] {
	@include block-border('modification', rgba($modification, 0.5));
	@include corner-triangle(10px, $modification);
}

ol,
ul {
	&[data-suggestion-kind='addition'] {
		@include corner-icon('+', $addition, $addition-light);
	}
	&[data-suggestion-kind='removal'] {
		@include corner-icon('–', $removal, $removal-light);
	}
}

p > *[data-suggestion-kind='modification'] {
	background-color: rgba($modification, 0.2);
}

> *[data-suggestion-kind] > hr:before {
	content: '';
	display: block;
	height: 32px;
	width: 1.5px;
	transform: translateY(-50%) translateX(-9px);
	opacity: 0.5;
}

> *[data-suggestion-kind='addition'] > hr:before {
	background-color: $addition;
}

> *[data-suggestion-kind='removal'] > hr:before {
	background-color: $removal;
}

.tableWrapper:not([data-suggestion-kind='addition']) {
	tr > *[data-suggestion-kind='addition'] {
		@include corner-triangle(6px, $addition);
	}

	tr > *[data-suggestion-kind='removal'] {
		@include corner-triangle(6px, $removal);
	}
}
